[{"/Users/apple/Documents/Work/ss/diploma-proj/src/index.js":"1","/Users/apple/Documents/Work/ss/diploma-proj/src/components/app/app.js":"2","/Users/apple/Documents/Work/ss/diploma-proj/src/components/header/header.js":"3","/Users/apple/Documents/Work/ss/diploma-proj/src/components/homepage/homepage.js":"4","/Users/apple/Documents/Work/ss/diploma-proj/src/components/catalog/catalog.js":"5","/Users/apple/Documents/Work/ss/diploma-proj/src/components/resistors/resistors.js":"6","/Users/apple/Documents/Work/ss/diploma-proj/src/components/resistors/resistor-info-page/resistor-info-page.js":"7","/Users/apple/Documents/Work/ss/diploma-proj/src/components/basket/busket.js":"8","/Users/apple/Documents/Work/ss/diploma-proj/src/components/rele/rele.js":"9","/Users/apple/Documents/Work/ss/diploma-proj/src/components/transistors/transistors-info-page/transistors-info-page.js":"10","/Users/apple/Documents/Work/ss/diploma-proj/src/components/rele/rele-info-page/rele-info-page.js":"11","/Users/apple/Documents/Work/ss/diploma-proj/src/components/modems/modems.js":"12","/Users/apple/Documents/Work/ss/diploma-proj/src/components/modems/modem-info-page/modem-info-page.js":"13","/Users/apple/Documents/Work/ss/diploma-proj/src/components/stabilitron/stabilitrons.js":"14","/Users/apple/Documents/Work/ss/diploma-proj/src/components/termistors/termistors.js":"15","/Users/apple/Documents/Work/ss/diploma-proj/src/components/termistors/termistor-info-page/termistor-info-page.js":"16","/Users/apple/Documents/Work/ss/diploma-proj/src/components/stabilitron/stabilitron-info-page/stabilitron-info-page.js":"17","/Users/apple/Documents/Work/ss/diploma-proj/src/components/diods/diod-info-page/diod-info-page.js":"18","/Users/apple/Documents/Work/ss/diploma-proj/src/components/diods/diods.js":"19","/Users/apple/Documents/Work/ss/diploma-proj/src/components/condensators/condensators-info-page/condensators-info-page.js":"20","/Users/apple/Documents/Work/ss/diploma-proj/src/components/transistors/transistors.js":"21","/Users/apple/Documents/Work/ss/diploma-proj/src/components/condensators/condensators.js":"22","/Users/apple/Documents/Work/ss/diploma-proj/src/components/droseli/droseli.js":"23","/Users/apple/Documents/Work/ss/diploma-proj/src/components/droseli/droseli-info-page/droseli-info-page.js":"24","/Users/apple/Documents/Work/ss/diploma-proj/src/components/datchyki/datchyki.js":"25","/Users/apple/Documents/Work/ss/diploma-proj/src/components/datchyki/datchyky-info-page/datchyky-info-page.js":"26","/Users/apple/Documents/Work/ss/diploma-proj/src/components/footer/footer.js":"27","/Users/apple/Documents/Work/ss/diploma-proj/src/components/rules/rules.js":"28","/Users/apple/Documents/Work/ss/diploma-proj/src/components/header/header-logo-input/header-logo-input.js":"29","/Users/apple/Documents/Work/ss/diploma-proj/src/components/header/header-navbar/header-navbar.js":"30","/Users/apple/Documents/Work/ss/diploma-proj/src/components/homepage/category-bar/category-bar.js":"31","/Users/apple/Documents/Work/ss/diploma-proj/src/components/catalog/catalog-item/catalog-item.js":"32","/Users/apple/Documents/Work/ss/diploma-proj/src/components/resistors/resistor-item/resistors-item.js":"33","/Users/apple/Documents/Work/ss/diploma-proj/src/components/basket/busket-item/busket-item.js":"34","/Users/apple/Documents/Work/ss/diploma-proj/src/components/rele/rele-item/rele-item.js":"35","/Users/apple/Documents/Work/ss/diploma-proj/src/components/modems/modem-item/modem-item.js":"36","/Users/apple/Documents/Work/ss/diploma-proj/src/components/termistors/termistors-item/termistor-item.js":"37","/Users/apple/Documents/Work/ss/diploma-proj/src/components/way-block/way-block.js":"38","/Users/apple/Documents/Work/ss/diploma-proj/src/components/droseli/droseli-item/droseli-item.js":"39","/Users/apple/Documents/Work/ss/diploma-proj/src/components/condensators/condensators-item/condensators-item.js":"40","/Users/apple/Documents/Work/ss/diploma-proj/src/components/datchyki/datchyky-item/datchyky-item.js":"41","/Users/apple/Documents/Work/ss/diploma-proj/src/components/transistors/transistors-item/transistors-item.js":"42","/Users/apple/Documents/Work/ss/diploma-proj/src/components/homepage/main-content/slider/slider.js":"43","/Users/apple/Documents/Work/ss/diploma-proj/src/components/diods/diod-item/diod-item.js":"44","/Users/apple/Documents/Work/ss/diploma-proj/src/components/stabilitron/stabilitron-item/stabilitron-item.js":"45","/Users/apple/Documents/Work/ss/diploma-proj/src/components/app/resistors_data.js":"46"},{"size":257,"mtime":1621453417542,"results":"47","hashOfConfig":"48"},{"size":15995,"mtime":1621555906660,"results":"49","hashOfConfig":"48"},{"size":434,"mtime":1621453417526,"results":"50","hashOfConfig":"48"},{"size":912,"mtime":1621453417527,"results":"51","hashOfConfig":"48"},{"size":717,"mtime":1621453417521,"results":"52","hashOfConfig":"48"},{"size":996,"mtime":1621554527694,"results":"53","hashOfConfig":"48"},{"size":7237,"mtime":1621453417530,"results":"54","hashOfConfig":"48"},{"size":1378,"mtime":1621453417520,"results":"55","hashOfConfig":"48"},{"size":706,"mtime":1621453417530,"results":"56","hashOfConfig":"48"},{"size":7715,"mtime":1621453417536,"results":"57","hashOfConfig":"48"},{"size":7694,"mtime":1621453417529,"results":"58","hashOfConfig":"48"},{"size":709,"mtime":1621453417528,"results":"59","hashOfConfig":"48"},{"size":7275,"mtime":1621453417527,"results":"60","hashOfConfig":"48"},{"size":832,"mtime":1621453417534,"results":"61","hashOfConfig":"48"},{"size":800,"mtime":1621453417536,"results":"62","hashOfConfig":"48"},{"size":7111,"mtime":1621453909301,"results":"63","hashOfConfig":"48"},{"size":7171,"mtime":1621453417533,"results":"64","hashOfConfig":"48"},{"size":7119,"mtime":1621453417524,"results":"65","hashOfConfig":"48"},{"size":789,"mtime":1621453417524,"results":"66","hashOfConfig":"48"},{"size":7819,"mtime":1621453417522,"results":"67","hashOfConfig":"48"},{"size":840,"mtime":1621453417537,"results":"68","hashOfConfig":"48"},{"size":834,"mtime":1621453417522,"results":"69","hashOfConfig":"48"},{"size":780,"mtime":1621453417525,"results":"70","hashOfConfig":"48"},{"size":7093,"mtime":1621453417524,"results":"71","hashOfConfig":"48"},{"size":729,"mtime":1621453417523,"results":"72","hashOfConfig":"48"},{"size":7096,"mtime":1621453417523,"results":"73","hashOfConfig":"48"},{"size":2219,"mtime":1621453417525,"results":"74","hashOfConfig":"48"},{"size":469,"mtime":1621453417532,"results":"75","hashOfConfig":"48"},{"size":8330,"mtime":1621504543264,"results":"76","hashOfConfig":"48"},{"size":1325,"mtime":1621504565344,"results":"77","hashOfConfig":"48"},{"size":3013,"mtime":1621453791551,"results":"78","hashOfConfig":"48"},{"size":856,"mtime":1621453417521,"results":"79","hashOfConfig":"48"},{"size":4168,"mtime":1621551914403,"results":"80","hashOfConfig":"48"},{"size":783,"mtime":1621453417520,"results":"81","hashOfConfig":"48"},{"size":2154,"mtime":1621453417530,"results":"82","hashOfConfig":"48"},{"size":2120,"mtime":1621453417528,"results":"83","hashOfConfig":"48"},{"size":2133,"mtime":1621453417535,"results":"84","hashOfConfig":"48"},{"size":1683,"mtime":1621453417537,"results":"85","hashOfConfig":"48"},{"size":2146,"mtime":1621453417525,"results":"86","hashOfConfig":"48"},{"size":2172,"mtime":1621453417522,"results":"87","hashOfConfig":"48"},{"size":2158,"mtime":1621453417523,"results":"88","hashOfConfig":"48"},{"size":2187,"mtime":1621453417537,"results":"89","hashOfConfig":"48"},{"size":1800,"mtime":1621453417527,"results":"90","hashOfConfig":"48"},{"size":2172,"mtime":1621453417524,"results":"91","hashOfConfig":"48"},{"size":2197,"mtime":1621453417534,"results":"92","hashOfConfig":"48"},{"size":5999,"mtime":1621507507314,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"3f6vbk",{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"96"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/apple/Documents/Work/ss/diploma-proj/src/index.js",[],["208","209"],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/app/app.js",["210","211"],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/header/header.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/homepage/homepage.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/catalog/catalog.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/resistors/resistors.js",["212"],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/resistors/resistor-info-page/resistor-info-page.js",["213","214"],"import React, {useEffect, useState} from 'react';\nimport style from \"../../../assets/style/scss/resistors/resistors-info/resistors-info.module.css\";\nimport CategoryBar from \"../../homepage/category-bar/category-bar\";\nimport StarIcon from '@material-ui/icons/Star';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport {Button} from 'react-bootstrap'\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nconst ResistorInfoPage = (props) => {\n\n    const [count, setCount] = useState(1)\n    const [allprice, setAllPrice] = useState(props.data.price)\n\n    useEffect(() => {\n            setAllPrice((count*props.data.price).toFixed(2))\n    },[count])\n\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n\n\n                <div className={style.info}>\n                    <div className={style.info__title}><h5>Резистор {props.data.opir/1000} кОм {props.data.model} {props.data.napruga}В</h5></div>\n                    <div className={style.info__photo_desc}>\n                        <div className={style.info__photo}>\n                            <img src={props.data.url}/>\n                        </div>\n                        <div className={style.info__desc}>\n                            <div className={style.info__desc__star}>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                &nbsp;&nbsp;&nbsp;\n                                Відгуків: 0 / Написати відгук\n\n                            </div>\n                            <div className={style.info__desc__inmarket_articul} >\n                                <h6>Наявність: {props.data.in_market}</h6>\n                                <h6>Артикул: {props.data.articul}</h6>\n                            </div>\n                            <div className={style.info__desc__price}>\n                                <h5>{allprice} грн.</h5>\n                            </div>\n                            <div className={style.info__desc__btns}>\n                                <span className={style.main_span}>\n                                    <span>\n                                    <Button variant=\"danger\" size={'sm'}\n                                            onClick={() => {\n                                                if(count === null){\n                                                    setCount(0)\n                                                    setCount(count+1)\n                                                } else {\n                                                    setCount(count+1)\n                                                }\n                                            }}\n                                    ><ArrowDropUpIcon/></Button>\n                                    <input type={'number'}\n                                           min={'0'}\n                                           value={count}\n                                           onChange={(e) => {\n                                               if(isNaN(e.target.value)){\n                                                   setCount(0)\n                                               } else {\n                                                   setCount(parseInt(e.target.value))\n                                               }\n                                           }}\n                                    />\n                                    </span>\n                                    <span className={style.sht}><Button variant=\"danger\" size={'sm'}\n                                            onClick={() => {\n                                                if(count > 0){\n                                                    setCount(count - 1)\n                                                } else {\n                                                    setCount(0)\n                                                }\n                                            }}\n                                    ><ArrowDropDownIcon/></Button> <h3>/шт</h3></span>\n\n                                </span>\n                                <div>\n                                    <Button variant=\"danger\"\n                                            className={style.btn}\n                                            onClick={() => {\n                                                props.setArr( [...props.arr, {\n                                                    img: props.data.url,\n                                                    name: `Резистор: ${props.data.model}`,\n                                                    count_item: count,\n                                                    price: props.data.price,\n                                                    all_price: parseInt(allprice)\n                                                }])\n                                            }}\n                                    >\n                                        Купити <ShoppingCartIcon fontSize={'small'}/>\n                                    </Button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={style.two_block}>\n                        <div className={style.two_block__item}><p>Опис</p></div>\n                        <div className={style.two_block__item}><p>Відгуки</p></div>\n                    </div>\n                    <div className={style.full_desc}>\n                        <div className={style.full_desc__title}>\n                            <p>\n                                Резистор 1.2k {props.data.model} 200V - це резистор вуглецевий 0,125 Вт потужністю, який широко використовують в різних схемах.\n                            </p>\n                            <p>Технічні характеристики:</p>\n                            <ul>\n                                <li>Номінальний опір: {props.data.opir/1000} кОм</li>\n                                <li>Допустиме відхилення: {props.data.deviation}</li>\n                                <li>Розсіювана потужність: {props.data.power} Вт</li>\n                                <li>Максимальна робоча напруга: {props.data.napruga} В</li>\n                                <li>Розмір: {props.data.size} мм</li>\n                                <li>Вага: {props.data.weigth} г</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ResistorInfoPage;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/basket/busket.js",["215"],"import React, {useState} from 'react';\n\nimport style from '../../assets/style/scss/busket/busket.module.css'\nimport BusketItem from \"./busket-item/busket-item\";\n\nconst Busket = (props) => {\n\n    let items = props.data.map(i => <BusketItem data={i}/>)\n    const sum = props.data.reduce(function (sum, {all_price}){\n        return sum + all_price\n    },0)\n    return (\n        <div className={style.main}>\n            <h5>Кошик замовлень</h5>\n            <div className={style.main__general}>\n            <div className={style.main__navbar}>\n                <div className={style.main__first}><p>Зображення</p></div>\n                <div className={style.main__second}><p>Найменування товару</p></div>\n                <div className={style.main__third}><p>Кількість</p></div>\n                <div className={style.main__four}><p>Ціна</p></div>\n                <div className={style.main__five}><p>Усього</p></div>\n            </div>\n            {items}\n\n            <div className={style.all}>\n                <div className={style.all__item}><p>Разом: </p></div>\n                <div className={style.all__item}><p>{sum} грн.</p></div>\n            </div>\n\n            <div className={style.oforml}>ОФОРМИТИ ЗАМОВЛЕННЯ</div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Busket;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/rele/rele.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/transistors/transistors-info-page/transistors-info-page.js",["216","217"],"import React, {useEffect, useState} from 'react';\nimport style from \"../../../assets/style/scss/resistors/resistors-info/resistors-info.module.css\";\nimport CategoryBar from \"../../homepage/category-bar/category-bar\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport {Button} from \"react-bootstrap\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nconst TransistorsInfoPage = (props) => {\n    const [count, setCount] = useState(1)\n    const [allprice, setAllPrice] = useState(props.data.price)\n\n    useEffect(() => {\n        setAllPrice((count*props.data.price).toFixed(2))\n    },[count])\n\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n\n\n                <div className={style.info}>\n                    <div className={style.info__title}><h5>Транзистор {props.data.model} {props.data.polarn} канальний {props.data.type} {props.data.korpus}</h5></div>\n                    <div className={style.info__photo_desc}>\n                        <div className={style.info__photo}>\n                            <img src={props.data.url}/>\n                        </div>\n                        <div className={style.info__desc}>\n                            <div className={style.info__desc__star}>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                &nbsp;&nbsp;&nbsp;\n                                Відгуків: 0 / Написати відгук\n\n                            </div>\n                            <div className={style.info__desc__inmarket_articul} >\n                                <h6>Наявність: {props.data.in_market}</h6>\n                                <h6>Артикул: {props.data.articul}</h6>\n                            </div>\n                            <div className={style.info__desc__price}>\n                                <h5>{allprice} грн.</h5>\n                            </div>\n                            <div className={style.info__desc__btns}>\n                                <span className={style.main_span}>\n                                    <span>\n                                    <Button variant=\"danger\" size={'sm'}\n                                            onClick={() => {\n                                                if(count === null){\n                                                    setCount(0)\n                                                    setCount(count+1)\n                                                } else {\n                                                    setCount(count+1)\n                                                }\n                                            }}\n                                    ><ArrowDropUpIcon/></Button>\n                                    <input type={'number'}\n                                           min={'0'}\n                                           value={count}\n                                           onChange={(e) => {\n                                               if(isNaN(e.target.value)){\n                                                   setCount(0)\n                                               } else {\n                                                   setCount(parseInt(e.target.value))\n                                               }\n                                           }}\n                                    />\n                                    </span>\n                                    <span className={style.sht}><Button variant=\"danger\" size={'sm'}\n                                                                        onClick={() => {\n                                                                            if(count > 0){\n                                                                                setCount(count - 1)\n                                                                            } else {\n                                                                                setCount(0)\n                                                                            }\n                                                                        }}\n                                    ><ArrowDropDownIcon/></Button> <h3>/шт</h3></span>\n\n                                </span>\n                                <div>\n                                    <Button variant=\"danger\"\n                                            className={style.btn}\n                                            onClick={() => {\n                                                props.setArr( [...props.arr, {\n                                                    img: props.data.url,\n                                                    name: `Транзистор: ${props.data.model}`,\n                                                    count_item: count,\n                                                    price: props.data.price,\n                                                    all_price: parseInt(allprice)\n                                                }])\n                                            }}\n                                    >\n                                        Купити <ShoppingCartIcon fontSize={'small'}/>\n                                    </Button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={style.two_block}>\n                        <div className={style.two_block__item}><p>Опис</p></div>\n                        <div className={style.two_block__item}><p>Відгуки</p></div>\n                    </div>\n                    <div className={style.full_desc}>\n                        <div className={style.full_desc__title}>\n                            <p>\n                                {props.data.info}\n                            </p>\n                            <p>Технічні характеристики:</p>\n                            <ul>\n                                <li>Тип транзистора: {props.data.type}</li>\n                                <li>Полярність: {props.data.polarn}</li>\n                                <li>Максимальна потужність, що розсіюється: {props.data.power} Вт</li>\n                                <li>Гранично допустима напруга стік-витік: {props.data.napruga_1} B</li>\n                                <li>Гранично допустима напруга затвор-витік: {props.data.napruga_1} В</li>\n                                <li>Максимально допустимий постійний струм стоку: {props.data.strum} A</li>\n                                <li>Максимальна температура каналу: {props.data.temp} ° C</li>\n                                <li>Тип корпусу: {props.data.korpus}</li>\n                                <li>Марка: {props.data.marka}</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TransistorsInfoPage;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/rele/rele-info-page/rele-info-page.js",["218","219"],"import React, {useEffect, useState} from 'react';\nimport style from \"../../../assets/style/scss/resistors/resistors-info/resistors-info.module.css\";\nimport CategoryBar from \"../../homepage/category-bar/category-bar\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport {Button} from \"react-bootstrap\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nconst ReleInfoPage = (props) => {\n    const [count, setCount] = useState(1)\n    const [allprice, setAllPrice] = useState(props.data.price)\n\n    useEffect(() => {\n        setAllPrice((count*props.data.price).toFixed(2))\n    },[count])\n\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n\n\n                <div className={style.info}>\n                    <div className={style.info__title}><h5>Реле {props.data.model} {props.data.marka} електромагнітне</h5></div>\n                    <div className={style.info__photo_desc}>\n                        <div className={style.info__photo}>\n                            <img src={props.data.url}/>\n                        </div>\n                        <div className={style.info__desc}>\n                            <div className={style.info__desc__star}>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                &nbsp;&nbsp;&nbsp;\n                                Відгуків: 0 / Написати відгук\n\n                            </div>\n                            <div className={style.info__desc__inmarket_articul} >\n                                <h6>Наявність: {props.data.in_market}</h6>\n                                <h6>Артикул: {props.data.articul}</h6>\n                            </div>\n                            <div className={style.info__desc__price}>\n                                <h5>{allprice} грн.</h5>\n                            </div>\n                            <div className={style.info__desc__btns}>\n                                <span className={style.main_span}>\n                                    <span>\n                                    <Button variant=\"danger\" size={'sm'}\n                                            onClick={() => {\n                                                if(count === null){\n                                                    setCount(0)\n                                                    setCount(count+1)\n                                                } else {\n                                                    setCount(count+1)\n                                                }\n                                            }}\n                                    ><ArrowDropUpIcon/></Button>\n                                    <input type={'number'}\n                                           min={'0'}\n                                           value={count}\n                                           onChange={(e) => {\n                                               if(isNaN(e.target.value)){\n                                                   setCount(0)\n                                               } else {\n                                                   setCount(parseInt(e.target.value))\n                                               }\n                                           }}\n                                    />\n                                    </span>\n                                    <span className={style.sht}><Button variant=\"danger\" size={'sm'}\n                                                                        onClick={() => {\n                                                                            if(count > 0){\n                                                                                setCount(count - 1)\n                                                                            } else {\n                                                                                setCount(0)\n                                                                            }\n                                                                        }}\n                                    ><ArrowDropDownIcon/></Button> <h3>/шт</h3></span>\n\n                                </span>\n                                <div>\n                                    <Button variant=\"danger\"\n                                            className={style.btn}\n                                            onClick={() => {\n                                                props.setArr( [...props.arr, {\n                                                    img: props.data.url,\n                                                    name: `Реле: ${props.data.model}`,\n                                                    count_item: count,\n                                                    price: props.data.price,\n                                                    all_price: parseInt(allprice)\n                                                }])\n                                            }}\n                                    >\n                                        Купити <ShoppingCartIcon fontSize={'small'}/>\n                                    </Button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={style.two_block}>\n                        <div className={style.two_block__item}><p>Опис</p></div>\n                        <div className={style.two_block__item}><p>Відгуки</p></div>\n                    </div>\n                    <div className={style.full_desc}>\n                        <div className={style.full_desc__title}>\n                            <p>\n                                {props.data.info}\n                            </p>\n                            <p>Технічні характеристики:</p>\n                            <ul>\n                                <li>Номінальна напруга: {props.data.nom_napruga}</li>\n                                <li>Максимальне навантаження на контактну групу: {props.data.navantaj}</li>\n                                <li>Опір обмотки: {props.data.opir} Вт</li>\n                                <li>Споживана потужність обмоткою: {props.data.power}Bт</li>\n                                <li>Матеріал покриття контакту: {props.data.material}</li>\n                                <li>Комутований максимальний струм: {props.data.strum_1}</li>\n                                <li>Комутований мінімальний струм: {props.data.strum_2}</li>\n                                <li>Робоча температура: {props.data.temp} ° C</li>\n                                <li>Розміри: {props.data.size}</li>\n                                <li>Марка: {props.data.marka}</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ReleInfoPage;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/modems/modems.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/modems/modem-info-page/modem-info-page.js",["220","221"],"import React, {useEffect, useState} from 'react';\nimport style from \"../../../assets/style/scss/resistors/resistors-info/resistors-info.module.css\";\nimport CategoryBar from \"../../homepage/category-bar/category-bar\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport {Button} from \"react-bootstrap\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nconst ModemInfoPage = (props) => {\n    const [count, setCount] = useState(1)\n    const [allprice, setAllPrice] = useState(props.data.price)\n\n    useEffect(() => {\n        setAllPrice((count*props.data.price).toFixed(2))\n    },[count])\n\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n\n\n                <div className={style.info}>\n                    <div className={style.info__title}><h5>Модем {props.data.model}</h5></div>\n                    <div className={style.info__photo_desc}>\n                        <div className={style.info__photo}>\n                            <img src={props.data.url}/>\n                        </div>\n                        <div className={style.info__desc}>\n                            <div className={style.info__desc__star}>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                &nbsp;&nbsp;&nbsp;\n                                Відгуків: 0 / Написати відгук\n\n                            </div>\n                            <div className={style.info__desc__inmarket_articul} >\n                                <h6>Наявність: {props.data.in_market}</h6>\n                                <h6>Артикул: {props.data.articul}</h6>\n                            </div>\n                            <div className={style.info__desc__price}>\n                                <h5>{allprice} грн.</h5>\n                            </div>\n                            <div className={style.info__desc__btns}>\n                                <span className={style.main_span}>\n                                    <span>\n                                    <Button variant=\"danger\" size={'sm'}\n                                            onClick={() => {\n                                                if(count === null){\n                                                    setCount(0)\n                                                    setCount(count+1)\n                                                } else {\n                                                    setCount(count+1)\n                                                }\n                                            }}\n                                    ><ArrowDropUpIcon/></Button>\n                                    <input type={'number'}\n                                           min={'0'}\n                                           value={count}\n                                           onChange={(e) => {\n                                               if(isNaN(e.target.value)){\n                                                   setCount(0)\n                                               } else {\n                                                   setCount(parseInt(e.target.value))\n                                               }\n                                           }}\n                                    />\n                                    </span>\n                                    <span className={style.sht}><Button variant=\"danger\" size={'sm'}\n                                                                        onClick={() => {\n                                                                            if(count > 0){\n                                                                                setCount(count - 1)\n                                                                            } else {\n                                                                                setCount(0)\n                                                                            }\n                                                                        }}\n                                    ><ArrowDropDownIcon/></Button> <h3>/шт</h3></span>\n\n                                </span>\n                                <div>\n                                    <Button variant=\"danger\"\n                                            className={style.btn}\n                                            onClick={() => {\n                                                props.setArr( [...props.arr, {\n                                                    img: props.data.url,\n                                                    name: `Модуль: ${props.data.model}`,\n                                                    count_item: count,\n                                                    price: props.data.price,\n                                                    all_price: parseInt(allprice)\n                                                }])\n                                            }}\n                                    >\n                                        Купити <ShoppingCartIcon fontSize={'small'}/>\n                                    </Button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={style.two_block}>\n                        <div className={style.two_block__item}><p>Опис</p></div>\n                        <div className={style.two_block__item}><p>Відгуки</p></div>\n                    </div>\n                    <div className={style.full_desc}>\n                        <div className={style.full_desc__title}>\n                            <p>\n                                {props.data.info}\n                            </p>\n                            <p>Технічні характеристики:</p>\n                            <ul>\n                                <li>Виробник: {props.data.vurobnyk}</li>\n                                <li>Розмір: {props.data.size}</li>\n                                <li>Живлення: {props.data.juvlennia} Вт</li>\n                                <li>Робоча температура: {props.data.temp}Bт</li>\n                                <li>Тип з'єднання: {props.data.type_connect}</li>\n                                <li>Частота: {props.data.chastota} МГц</li>\n                                <li>Інтерфейс: {props.data.interface}</li>\n                                <li>Тип пристрою: {props.data.type} </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ModemInfoPage;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/stabilitron/stabilitrons.js",["222"],"import React from 'react';\nimport TermistorItem from \"../termistors/termistors-item/termistor-item\";\nimport style from \"../../assets/style/scss/resistors/resistors.module.css\";\nimport CategoryBar from \"../homepage/category-bar/category-bar\";\nimport StabilitronItem from \"./stabilitron-item/stabilitron-item\";\n\nconst Stabilitrons = (props) => {\n    const data = require('../../data/stabilitrons.json')\n\n    let item = data.map(i => <StabilitronItem setResID={props.setResID}\n                                              data={i}\n    />)\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n                {item}\n            </div>\n        </div>\n    )\n};\n\nexport default Stabilitrons;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/termistors/termistors.js",["223"],"import React from 'react';\nimport ModemItem from \"../modems/modem-item/modem-item\";\nimport style from \"../../assets/style/scss/resistors/resistors.module.css\";\nimport CategoryBar from \"../homepage/category-bar/category-bar\";\nimport TermistorItem from \"./termistors-item/termistor-item\";\n\nconst Termistors = (props) => {\n    const data = require('../../data/termistors.json')\n\n    let item = data.map(i => <TermistorItem setResID={props.setResID}\n                                            data={i}\n    />)\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n                {item}\n            </div>\n        </div>\n    )\n};\n\nexport default Termistors;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/termistors/termistor-info-page/termistor-info-page.js",["224","225"],"import React, {useEffect, useState} from 'react';\nimport style from \"../../../assets/style/scss/resistors/resistors-info/resistors-info.module.css\";\nimport CategoryBar from \"../../homepage/category-bar/category-bar\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport {Button} from \"react-bootstrap\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nconst TermistorInfoPage = (props) => {\n    const [count, setCount] = useState(1)\n    const [allprice, setAllPrice] = useState(props.data.price)\n\n    useEffect(() => {\n        setAllPrice((count*props.data.price).toFixed(2))\n    },[count])\n\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n\n\n                <div className={style.info}>\n                    <div className={style.info__title}><h5>Термістор {props.data.model}, {props.data.opir}</h5></div>\n                    <div className={style.info__photo_desc}>\n                        <div className={style.info__photo}>\n                            <img src={props.data.url}/>\n                        </div>\n                        <div className={style.info__desc}>\n                            <div className={style.info__desc__star}>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                &nbsp;&nbsp;&nbsp;\n                                Відгуків: 0 / Написати відгук\n\n                            </div>\n                            <div className={style.info__desc__inmarket_articul} >\n                                <h6>Наявність: {props.data.in_market}</h6>\n                                <h6>Артикул: {props.data.articul}</h6>\n                            </div>\n                            <div className={style.info__desc__price}>\n                                <h5>{allprice} грн.</h5>\n                            </div>\n                            <div className={style.info__desc__btns}>\n                                <span className={style.main_span}>\n                                    <span>\n                                    <Button variant=\"danger\" size={'sm'}\n                                            onClick={() => {\n                                                if(count === null){\n                                                    setCount(0)\n                                                    setCount(count+1)\n                                                } else {\n                                                    setCount(count+1)\n                                                }\n                                            }}\n                                    ><ArrowDropUpIcon/></Button>\n                                    <input type={'number'}\n                                           min={'0'}\n                                           value={count}\n                                           onChange={(e) => {\n                                               if(isNaN(e.target.value)){\n                                                   setCount(0)\n                                               } else {\n                                                   setCount(parseInt(e.target.value))\n                                               }\n                                           }}\n                                    />\n                                    </span>\n                                    <span className={style.sht}><Button variant=\"danger\" size={'sm'}\n                                                                        onClick={() => {\n                                                                            if(count > 0){\n                                                                                setCount(count - 1)\n                                                                            } else {\n                                                                                setCount(0)\n                                                                            }\n                                                                        }}\n                                    ><ArrowDropDownIcon/></Button> <h3>/шт</h3></span>\n\n                                </span>\n                                <div>\n                                    <Button variant=\"danger\"\n                                            className={style.btn}\n                                            onClick={() => {\n                                                props.setArr( [...props.arr, {\n                                                    img: props.data.url,\n                                                    name: `Термістор: ${props.data.model}`,\n                                                    count_item: count,\n                                                    price: props.data.price,\n                                                    all_price: parseInt(allprice)\n                                                }])\n                                            }}\n                                    >\n                                        Купити <ShoppingCartIcon fontSize={'small'}/>\n                                    </Button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={style.two_block}>\n                        <div className={style.two_block__item}><p>Опис</p></div>\n                        <div className={style.two_block__item}><p>Відгуки</p></div>\n                    </div>\n                    <div className={style.full_desc}>\n                        <div className={style.full_desc__title}>\n                            <p>\n                                {props.data.info}\n                            </p>\n                            <p>Технічні характеристики:</p>\n                            <ul>\n                                <li>Виробник: {props.data.proizvoditel}</li>\n                                <li>Опір: {props.data.opir}</li>\n                                <li>Застосування: {props.data.usage}</li>\n                                <li>Максимальний струм: {props.data.max_tok} А</li>\n                                <li>Тип: {props.data.type}</li>\n                                <li>Розмір: {props.data.size}</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TermistorInfoPage;\n","/Users/apple/Documents/Work/ss/diploma-proj/src/components/stabilitron/stabilitron-info-page/stabilitron-info-page.js",["226","227"],"import React, {useEffect, useState} from 'react';\nimport style from \"../../../assets/style/scss/resistors/resistors-info/resistors-info.module.css\";\nimport CategoryBar from \"../../homepage/category-bar/category-bar\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport {Button} from \"react-bootstrap\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nconst StabilitronInfoPage = (props) => {\n    const [count, setCount] = useState(1)\n    const [allprice, setAllPrice] = useState(props.data.price)\n\n    useEffect(() => {\n        setAllPrice((count*props.data.price).toFixed(2))\n    },[count])\n\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n\n\n                <div className={style.info}>\n                    <div className={style.info__title}><h5>Стабілітрон {props.data.model}</h5></div>\n                    <div className={style.info__photo_desc}>\n                        <div className={style.info__photo}>\n                            <img src={props.data.url}/>\n                        </div>\n                        <div className={style.info__desc}>\n                            <div className={style.info__desc__star}>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                &nbsp;&nbsp;&nbsp;\n                                Відгуків: 0 / Написати відгук\n\n                            </div>\n                            <div className={style.info__desc__inmarket_articul} >\n                                <h6>Наявність: {props.data.in_market}</h6>\n                                <h6>Артикул: {props.data.articul}</h6>\n                            </div>\n                            <div className={style.info__desc__price}>\n                                <h5>{allprice} грн.</h5>\n                            </div>\n                            <div className={style.info__desc__btns}>\n                                <span className={style.main_span}>\n                                    <span>\n                                    <Button variant=\"danger\" size={'sm'}\n                                            onClick={() => {\n                                                if(count === null){\n                                                    setCount(0)\n                                                    setCount(count+1)\n                                                } else {\n                                                    setCount(count+1)\n                                                }\n                                            }}\n                                    ><ArrowDropUpIcon/></Button>\n                                    <input type={'number'}\n                                           min={'0'}\n                                           value={count}\n                                           onChange={(e) => {\n                                               if(isNaN(e.target.value)){\n                                                   setCount(0)\n                                               } else {\n                                                   setCount(parseInt(e.target.value))\n                                               }\n                                           }}\n                                    />\n                                    </span>\n                                    <span className={style.sht}><Button variant=\"danger\" size={'sm'}\n                                                                        onClick={() => {\n                                                                            if(count > 0){\n                                                                                setCount(count - 1)\n                                                                            } else {\n                                                                                setCount(0)\n                                                                            }\n                                                                        }}\n                                    ><ArrowDropDownIcon/></Button> <h3>/шт</h3></span>\n\n                                </span>\n                                <div>\n                                    <Button variant=\"danger\"\n                                            className={style.btn}\n                                            onClick={() => {\n                                                props.setArr( [...props.arr, {\n                                                    img: props.data.url,\n                                                    name: `Стабілітрон: ${props.data.model}`,\n                                                    count_item: count,\n                                                    price: props.data.price,\n                                                    all_price: parseInt(allprice)\n                                                }])\n                                            }}\n                                    >\n                                        Купити <ShoppingCartIcon fontSize={'small'}/>\n                                    </Button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={style.two_block}>\n                        <div className={style.two_block__item}><p>Опис</p></div>\n                        <div className={style.two_block__item}><p>Відгуки</p></div>\n                    </div>\n                    <div className={style.full_desc}>\n                        <div className={style.full_desc__title}>\n                            <p>\n                                {props.data.info}\n                            </p>\n                            <p>Технічні характеристики:</p>\n                            <ul>\n                                <li>Корпус: {props.data.korpus}</li>\n                                <li>Напруга стабілізації: {props.data.napruga}</li>\n                                <li>Струм стабілізації: {props.data.strum}</li>\n                                <li>Потужність: {props.data.potuzhn} А</li>\n                                <li>Монтаж: {props.data.montazh}</li>\n                                <li>Температурний коефіцієнт: {props.data.temp_kof}</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default StabilitronInfoPage;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/diods/diod-info-page/diod-info-page.js",["228","229"],"import React, {useEffect, useState} from 'react';\nimport style from \"../../../assets/style/scss/resistors/resistors-info/resistors-info.module.css\";\nimport CategoryBar from \"../../homepage/category-bar/category-bar\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport {Button} from \"react-bootstrap\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nconst DiodInfoPage = (props) => {\n    const [count, setCount] = useState(1)\n    const [allprice, setAllPrice] = useState(props.data.price)\n\n    useEffect(() => {\n        setAllPrice((count*props.data.price).toFixed(2))\n    },[count])\n\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n\n\n                <div className={style.info}>\n                    <div className={style.info__title}><h5>Діод {props.data.model}</h5></div>\n                    <div className={style.info__photo_desc}>\n                        <div className={style.info__photo}>\n                            <img src={props.data.url}/>\n                        </div>\n                        <div className={style.info__desc}>\n                            <div className={style.info__desc__star}>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                &nbsp;&nbsp;&nbsp;\n                                Відгуків: 0 / Написати відгук\n\n                            </div>\n                            <div className={style.info__desc__inmarket_articul} >\n                                <h6>Наявність: {props.data.in_market}</h6>\n                                <h6>Артикул: {props.data.articul}</h6>\n                            </div>\n                            <div className={style.info__desc__price}>\n                                <h5>{allprice} грн.</h5>\n                            </div>\n                            <div className={style.info__desc__btns}>\n                                <span className={style.main_span}>\n                                    <span>\n                                    <Button variant=\"danger\" size={'sm'}\n                                            onClick={() => {\n                                                if(count === null){\n                                                    setCount(0)\n                                                    setCount(count+1)\n                                                } else {\n                                                    setCount(count+1)\n                                                }\n                                            }}\n                                    ><ArrowDropUpIcon/></Button>\n                                    <input type={'number'}\n                                           min={'0'}\n                                           value={count}\n                                           onChange={(e) => {\n                                               if(isNaN(e.target.value)){\n                                                   setCount(0)\n                                               } else {\n                                                   setCount(parseInt(e.target.value))\n                                               }\n                                           }}\n                                    />\n                                    </span>\n                                    <span className={style.sht}><Button variant=\"danger\" size={'sm'}\n                                                                        onClick={() => {\n                                                                            if(count > 0){\n                                                                                setCount(count - 1)\n                                                                            } else {\n                                                                                setCount(0)\n                                                                            }\n                                                                        }}\n                                    ><ArrowDropDownIcon/></Button> <h3>/шт</h3></span>\n\n                                </span>\n                                <div>\n                                    <Button variant=\"danger\"\n                                            className={style.btn}\n                                            onClick={() => {\n                                                props.setArr( [...props.arr, {\n                                                    img: props.data.url,\n                                                    name: `Діод: ${props.data.model}`,\n                                                    count_item: count,\n                                                    price: props.data.price,\n                                                    all_price: parseInt(allprice)\n                                                }])\n                                            }}\n                                    >\n                                        Купити <ShoppingCartIcon fontSize={'small'}/>\n                                    </Button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={style.two_block}>\n                        <div className={style.two_block__item}><p>Опис</p></div>\n                        <div className={style.two_block__item}><p>Відгуки</p></div>\n                    </div>\n                    <div className={style.full_desc}>\n                        <div className={style.full_desc__title}>\n                            <p>\n                                {props.data.info}\n                            </p>\n                            <p>Технічні характеристики:</p>\n                            <ul>\n                                <li>Корпус: {props.data.korpus}</li>\n                                <li>Зворотня напруга Vrrm: {props.data.napruga} В</li>\n                                <li>Прямий струм: {props.data.strum} А</li>\n                                <li>Падіння напруги: {props.data.napruga_1} А</li>\n                                <li>Монтаж: {props.data.montazh}</li>\n                                <li>Імпульсний струм: {props.data.imp_strum} А</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DiodInfoPage;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/diods/diods.js",["230"],"import React from 'react';\nimport StabilitronItem from \"../stabilitron/stabilitron-item/stabilitron-item\";\nimport style from \"../../assets/style/scss/resistors/resistors.module.css\";\nimport CategoryBar from \"../homepage/category-bar/category-bar\";\nimport DiodItem from \"./diod-item/diod-item\";\n\nconst Diods = (props) => {\n    const data = require('../../data/diods.json')\n\n    let item = data.map(i => <DiodItem setResID={props.setResID}\n                                              data={i}\n    />)\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n                {item}\n            </div>\n        </div>\n    )\n};\n\nexport default Diods;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/condensators/condensators-info-page/condensators-info-page.js",["231","232"],"import React, {useEffect, useState} from 'react';\nimport style from \"../../../assets/style/scss/resistors/resistors-info/resistors-info.module.css\";\nimport CategoryBar from \"../../homepage/category-bar/category-bar\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport {Button} from \"react-bootstrap\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nconst CondensatorsInfoPage = (props) => {\n    const [count, setCount] = useState(1)\n    const [allprice, setAllPrice] = useState(props.data.price)\n\n    useEffect(() => {\n        setAllPrice((count*props.data.price).toFixed(2))\n    },[count])\n\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n\n\n                <div className={style.info}>\n                    <div className={style.info__title}><h5>Конденсатор {props.data.emnist}Ф {props.data.model} {props.data.napruga}В</h5></div>\n                    <div className={style.info__photo_desc}>\n                        <div className={style.info__photo}>\n                            <img src={props.data.url}/>\n                        </div>\n                        <div className={style.info__desc}>\n                            <div className={style.info__desc__star}>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                &nbsp;&nbsp;&nbsp;\n                                Відгуків: 0 / Написати відгук\n\n                            </div>\n                            <div className={style.info__desc__inmarket_articul} >\n                                <h6>Наявність: {props.data.in_market}</h6>\n                                <h6>Артикул: {props.data.articul}</h6>\n                            </div>\n                            <div className={style.info__desc__price}>\n                                <h5>{allprice} грн.</h5>\n                            </div>\n                            <div className={style.info__desc__btns}>\n                                <span className={style.main_span}>\n                                    <span>\n                                    <Button variant=\"danger\" size={'sm'}\n                                            onClick={() => {\n                                                if(count === null){\n                                                    setCount(0)\n                                                    setCount(count+1)\n                                                } else {\n                                                    setCount(count+1)\n                                                }\n                                            }}\n                                    ><ArrowDropUpIcon/></Button>\n                                    <input type={'number'}\n                                           min={'0'}\n                                           value={count}\n                                           onChange={(e) => {\n                                               if(isNaN(e.target.value)){\n                                                   setCount(0)\n                                               } else {\n                                                   setCount(parseInt(e.target.value))\n                                               }\n                                           }}\n                                    />\n                                    </span>\n                                    <span className={style.sht}><Button variant=\"danger\" size={'sm'}\n                                                                        onClick={() => {\n                                                                            if(count > 0){\n                                                                                setCount(count - 1)\n                                                                            } else {\n                                                                                setCount(0)\n                                                                            }\n                                                                        }}\n                                    ><ArrowDropDownIcon/></Button> <h3>/шт</h3></span>\n\n                                </span>\n                                <div>\n                                    <Button variant=\"danger\"\n                                            className={style.btn}\n                                            onClick={() => {\n                                                props.setArr( [...props.arr, {\n                                                    img: props.data.url,\n                                                    name: `Конденсатор: ${props.data.model}`,\n                                                    count_item: count,\n                                                    price: props.data.price,\n                                                    all_price: parseInt(allprice)\n                                                }])\n                                            }}\n                                    >\n                                        Купити <ShoppingCartIcon fontSize={'small'}/>\n                                    </Button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={style.two_block}>\n                        <div className={style.two_block__item}><p>Опис</p></div>\n                        <div className={style.two_block__item}><p>Відгуки</p></div>\n                    </div>\n                    <div className={style.full_desc}>\n                        <div className={style.full_desc__title}>\n                            <p>\n                                Конденсатор 1.2k {props.data.model} 200V - це конденсатор <b>{props.data.type}</b> 0,125 Вт потужністю, який широко використовуються в різноманітних пристроях сучасної електроніки.\n                            </p>\n                            <p>Технічні характеристики:</p>\n                            <ul>\n                                <li>Номінальна ємність: {props.data.emnist}Ф</li>\n                                <li>Тип конденсатора: {props.data.type}</li>\n                                <li>Допуск: {props.data.deviation}Ф</li>\n                                <li>Тип діелектрика: {props.data.type_die}Ф</li>\n                                <li>Розсіювана потужність: {props.data.power} Вт</li>\n                                <li>Номінальна напруга: {props.data.napruga} В</li>\n                                <li>Робоча температура: {props.data.temp} ° C</li>\n                                <li>Розмір: {props.data.size} мм</li>\n                                <li>Вага: {props.data.weigth} г</li>\n                            </ul>\n                            <p>{props.data.info}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CondensatorsInfoPage;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/transistors/transistors.js",["233"],"import React from 'react';\nimport CondensatorsItem from \"../condensators/condensators-item/condensators-item\";\nimport style from \"../../assets/style/scss/resistors/resistors.module.css\";\nimport CategoryBar from \"../homepage/category-bar/category-bar\";\nimport TransistorsItem from \"./transistors-item/transistors-item\";\n\nconst Transistors = (props) => {\n    const data = require('../../data/transistors.json')\n\n    let item = data.map(i => <TransistorsItem setResID={props.setResID}\n                                               data={i}\n    />)\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n                {item}\n            </div>\n        </div>\n    )\n};\n\nexport default Transistors;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/condensators/condensators.js",["234"],"import React from 'react';\nimport ResistorsItem from \"../resistors/resistor-item/resistors-item\";\nimport style from \"../../assets/style/scss/resistors/resistors.module.css\";\nimport CategoryBar from \"../homepage/category-bar/category-bar\";\nimport CondensatorsItem from \"./condensators-item/condensators-item\";\n\nconst Condensators = (props) => {\n    const data = require('../../data/condensators.json')\n\n    let item = data.map(i => <CondensatorsItem setResID={props.setResID}\n                                               data={i}\n    />)\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n                {item}\n            </div>\n        </div>\n    )\n};\n\nexport default Condensators;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/droseli/droseli.js",["235"],"import React from 'react';\nimport ModemItem from \"../modems/modem-item/modem-item\";\nimport style from \"../../assets/style/scss/resistors/resistors.module.css\";\nimport CategoryBar from \"../homepage/category-bar/category-bar\";\nimport DroseliItem from \"./droseli-item/droseli-item\";\n\nconst Droseli = (props) => {\n    const data = require('../../data/droseli.json')\n\n    let item = data.map(i => <DroseliItem setResID={props.setResID}\n                                          data={i}\n    />)\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n                {item}\n            </div>\n        </div>\n    )\n};\n\nexport default Droseli;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/droseli/droseli-info-page/droseli-info-page.js",["236","237"],"import React, {useEffect, useState} from 'react';\nimport style from \"../../../assets/style/scss/resistors/resistors-info/resistors-info.module.css\";\nimport CategoryBar from \"../../homepage/category-bar/category-bar\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport {Button} from \"react-bootstrap\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nconst DroseliInfoPage = (props) => {\n    const [count, setCount] = useState(1)\n    const [allprice, setAllPrice] = useState(props.data.price)\n\n    useEffect(() => {\n        setAllPrice((count*props.data.price).toFixed(2))\n    },[count])\n\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n\n\n                <div className={style.info}>\n                    <div className={style.info__title}><h5>Дроссель {props.data.model} {props.data.inductivity} {props.data.strum}</h5></div>\n                    <div className={style.info__photo_desc}>\n                        <div className={style.info__photo}>\n                            <img src={props.data.url}/>\n                        </div>\n                        <div className={style.info__desc}>\n                            <div className={style.info__desc__star}>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                &nbsp;&nbsp;&nbsp;\n                                Відгуків: 0 / Написати відгук\n\n                            </div>\n                            <div className={style.info__desc__inmarket_articul} >\n                                <h6>Наявність: {props.data.in_market}</h6>\n                                <h6>Артикул: {props.data.articul}</h6>\n                            </div>\n                            <div className={style.info__desc__price}>\n                                <h5>{allprice} грн.</h5>\n                            </div>\n                            <div className={style.info__desc__btns}>\n                                <span className={style.main_span}>\n                                    <span>\n                                    <Button variant=\"danger\" size={'sm'}\n                                            onClick={() => {\n                                                if(count === null){\n                                                    setCount(0)\n                                                    setCount(count+1)\n                                                } else {\n                                                    setCount(count+1)\n                                                }\n                                            }}\n                                    ><ArrowDropUpIcon/></Button>\n                                    <input type={'number'}\n                                           min={'0'}\n                                           value={count}\n                                           onChange={(e) => {\n                                               if(isNaN(e.target.value)){\n                                                   setCount(0)\n                                               } else {\n                                                   setCount(parseInt(e.target.value))\n                                               }\n                                           }}\n                                    />\n                                    </span>\n                                    <span className={style.sht}><Button variant=\"danger\" size={'sm'}\n                                                                        onClick={() => {\n                                                                            if(count > 0){\n                                                                                setCount(count - 1)\n                                                                            } else {\n                                                                                setCount(0)\n                                                                            }\n                                                                        }}\n                                    ><ArrowDropDownIcon/></Button> <h3>/шт</h3></span>\n\n                                </span>\n                                <div>\n                                    <Button variant=\"danger\"\n                                            className={style.btn}\n                                            onClick={() => {\n                                                props.setArr( [...props.arr, {\n                                                    img: props.data.url,\n                                                    name: `Дроссель: ${props.data.model}`,\n                                                    count_item: count,\n                                                    price: props.data.price,\n                                                    all_price: parseInt(allprice)\n                                                }])\n                                            }}\n                                    >\n                                        Купити <ShoppingCartIcon fontSize={'small'}/>\n                                    </Button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={style.two_block}>\n                        <div className={style.two_block__item}><p>Опис</p></div>\n                        <div className={style.two_block__item}><p>Відгуки</p></div>\n                    </div>\n                    <div className={style.full_desc}>\n                        <div className={style.full_desc__title}>\n                            <p>\n                                {props.data.info}\n                            </p>\n                            <p>Технічні характеристики:</p>\n                            <ul>\n                                <li>Індуктивність: {props.data.inductivity}</li>\n                                <li>Максимальний струм: {props.data.strum} А</li>\n                                <li>Розміри: {props.data.size} </li>\n                                <li>Допуск: {props.data.dopusk}</li>\n                                <li>Робоча температура: {props.data.temp} º С</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nexport default DroseliInfoPage;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/datchyki/datchyki.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/datchyki/datchyky-info-page/datchyky-info-page.js",["238","239"],"import React, {useEffect, useState} from 'react';\nimport style from \"../../../assets/style/scss/resistors/resistors-info/resistors-info.module.css\";\nimport CategoryBar from \"../../homepage/category-bar/category-bar\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport {Button} from \"react-bootstrap\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nconst DatchykyInfoPage = (props) => {\n\n    const [count, setCount] = useState(1)\n    const [allprice, setAllPrice] = useState(props.data.price)\n\n    useEffect(() => {\n        setAllPrice((count*props.data.price).toFixed(2))\n    },[count])\n\n    return (\n        <div className={style.main}>\n            <div className={style.main__leftbar}>\n                <CategoryBar/>\n            </div>\n            <div className={style.main__content}>\n\n\n                <div className={style.info}>\n                    <div className={style.info__title}><h5>Дроссель {props.data.model} {props.data.inductivity} {props.data.strum}</h5></div>\n                    <div className={style.info__photo_desc}>\n                        <div className={style.info__photo}>\n                            <img src={props.data.url}/>\n                        </div>\n                        <div className={style.info__desc}>\n                            <div className={style.info__desc__star}>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                <StarIcon fontSize={'small'}/>\n                                &nbsp;&nbsp;&nbsp;\n                                Відгуків: 0 / Написати відгук\n\n                            </div>\n                            <div className={style.info__desc__inmarket_articul} >\n                                <h6>Наявність: {props.data.in_market}</h6>\n                                <h6>Артикул: {props.data.articul}</h6>\n                            </div>\n                            <div className={style.info__desc__price}>\n                                <h5>{allprice} грн.</h5>\n                            </div>\n                            <div className={style.info__desc__btns}>\n                                <span className={style.main_span}>\n                                    <span>\n                                    <Button variant=\"danger\" size={'sm'}\n                                            onClick={() => {\n                                                if(count === null){\n                                                    setCount(0)\n                                                    setCount(count+1)\n                                                } else {\n                                                    setCount(count+1)\n                                                }\n                                            }}\n                                    ><ArrowDropUpIcon/></Button>\n                                    <input type={'number'}\n                                           min={'0'}\n                                           value={count}\n                                           onChange={(e) => {\n                                               if(isNaN(e.target.value)){\n                                                   setCount(0)\n                                               } else {\n                                                   setCount(parseInt(e.target.value))\n                                               }\n                                           }}\n                                    />\n                                    </span>\n                                    <span className={style.sht}><Button variant=\"danger\" size={'sm'}\n                                                                        onClick={() => {\n                                                                            if(count > 0){\n                                                                                setCount(count - 1)\n                                                                            } else {\n                                                                                setCount(0)\n                                                                            }\n                                                                        }}\n                                    ><ArrowDropDownIcon/></Button> <h3>/шт</h3></span>\n\n                                </span>\n                                <div>\n                                    <Button variant=\"danger\"\n                                            className={style.btn}\n                                            onClick={() => {\n                                                props.setArr( [...props.arr, {\n                                                    img: props.data.url,\n                                                    name: `Дроссель: ${props.data.model}`,\n                                                    count_item: count,\n                                                    price: props.data.price,\n                                                    all_price: parseInt(allprice)\n                                                }])\n                                            }}\n                                    >\n                                        Купити <ShoppingCartIcon fontSize={'small'}/>\n                                    </Button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={style.two_block}>\n                        <div className={style.two_block__item}><p>Опис</p></div>\n                        <div className={style.two_block__item}><p>Відгуки</p></div>\n                    </div>\n                    <div className={style.full_desc}>\n                        <div className={style.full_desc__title}>\n                            <p>\n                                {props.data.info}\n                            </p>\n                            <p>Технічні характеристики:</p>\n                            <ul>\n                                <li>Індуктивність: {props.data.inductivity}</li>\n                                <li>Максимальний струм: {props.data.strum} А</li>\n                                <li>Розміри: {props.data.size} </li>\n                                <li>Допуск: {props.data.dopusk}</li>\n                                <li>Робоча температура: {props.data.temp} º С</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\nexport default DatchykyInfoPage;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/footer/footer.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/rules/rules.js",["240"],"import React from 'react';\n\nimport style from '../../assets/style/scss/rules/rules.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport WayBlock from \"../way-block/way-block\";\n\nconst Rules = () => {\n    return (\n        <div className={style.main}>\n            <WayBlock data={[\n                {name: \"Головна\", url: \"/home\"},\n                {name: \"Правила\", url: \"/rules\"}\n                ]}/>\n\n\n        </div>\n    );\n};\n\nexport default Rules;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/header/header-logo-input/header-logo-input.js",["241","242","243","244"],"import React, {useState, forwardRef} from 'react';\n\nimport style from '../../../assets/style/scss/header/header-logo-input/header-logo-input.module.css'\nimport logo from '../../../assets/images/blackchip-logo.png';\nimport {NavLink} from \"react-router-dom\";\nimport CallIcon from '@material-ui/icons/Call';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\n// import { Button } from '@material-ui/core';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\n\n\nimport Avatar from '@material-ui/core/Avatar';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\n\n\n\nimport styles from '../../../assets/style/scss/header/style.module.css';\nimport {CssBaseline} from '@material-ui/core'\n\nconst Transition = forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function HeaderLogoInput(props) {\n\n    const classes = useStyles();\n\n    const [adminLogin, setAdminLogin] = useState('');\n    const [adminPassword, setAdminPassword] = useState('');\n\n    (adminLogin === '' && adminPassword === '') ?\n        localStorage.setItem('admin', '1') : localStorage.setItem('admin', '0')\n\n    console.log(localStorage.getItem('admin'))\n\n    const [openLogin, setOpenLogin] = useState(false);\n\n    const handleLoginOpen = () => {\n        setOpenLogin(true)\n    }\n\n    const handleLoginClose = () => {\n        setOpenLogin(false)\n    }\n\n    const sum = props.data.reduce(function (sum, {all_price}){\n        return sum + all_price\n    },0)\n    return (\n        <div className={style.HeaderLogoInput_main}>\n            <div className={style.HeaderLogoInput_main__content}>\n                <img src={logo} alt={'logo'}/>\n                <div className={style.input_and_phone}>\n                    <div className={style.input_and_phone__contact}><p><CallIcon fontSize={\"small\"}/>(068)463-24-36 | 9:00 до 18:00 крім Сб та Нд</p></div>\n                    <div className={style.input_and_phone__search_panel}><input type='text'/>\n                        <Button color={'default'} variant={'contained'}  size={'small'}className={style.btn}>\n                            <SearchIcon/>\n                        </Button>\n                    </div>\n                </div>\n                <div className={style.HeaderLogoInput_main__content__basket}>\n                    <span><NavLink to={'/basket'}><ShoppingBasketIcon fontSize={'large'}/> <span>Товарів: {props.data.length} ({sum} грн)</span></NavLink></span>\n                </div>\n                <div\n                    className={style.HeaderLogoInput_main__content__basket}\n                    onClick={handleLoginOpen}\n                >\n                     <span>Login</span>\n                </div>\n\n\n                <Dialog\n                    open={openLogin}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={handleLoginClose}\n                    className={styles.lab5_dialog1}\n                >\n                    <Container component=\"main\" maxWidth=\"xs\">\n                        <CssBaseline />\n                        <div className={classes.paper}>\n                            <Avatar className={classes.avatar}>\n                                <LockOutlinedIcon />\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Sign in\n                            </Typography>\n                            <form className={classes.form} noValidate>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    autoFocus\n                                    onChange={event => setAdminLogin(event.target.value)}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    onChange={event => setAdminPassword(event.target.value)}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox value=\"remember\" color=\"primary\" />}\n                                    label=\"Remember me\"\n                                />\n                                <Link\n                                    href=\"/home\"\n                                    // variant=\"body2\"\n                                >\n                                    <Button\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.submit}\n                                    >\n                                        Sign In\n                                    </Button>\n                                </Link>\n                                <Grid container>\n                                    <Grid item xs>\n                                        <Link href=\"#\" variant=\"body2\">\n                                            Forgot password?\n                                        </Link>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link href=\"#\" variant=\"body2\">\n                                            {\"Don't have an account? Sign Up\"}\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </div>\n                        <Box mt={8}>\n                            <Copyright />\n                        </Box>\n                    </Container>\n                </Dialog>\n\n            </div>\n        </div>\n    );\n};\n\n","/Users/apple/Documents/Work/ss/diploma-proj/src/components/header/header-navbar/header-navbar.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/homepage/category-bar/category-bar.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/catalog/catalog-item/catalog-item.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/resistors/resistor-item/resistors-item.js",["245","246","247","248","249","250"],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/basket/busket-item/busket-item.js",["251"],"import React from 'react';\n\nimport style from '../../../assets/style/scss/busket/busket-item/busket-item.module.css'\n\n\nconst BusketItem = (props) => {\n    return (\n        <div className={style.main}>\n            <div className={style.main__navbar}>\n                <div className={style.main__first}>\n                    <img src={props.data.img}/>\n                </div>\n                <div className={style.main__second}><p>{props.data.name}</p></div>\n                <div className={style.main__third}><p>{props.data.count_item}</p></div>\n                <div className={style.main__four}><p>{props.data.price}</p></div>\n                <div className={style.main__five}><p>{props.data.all_price}</p></div>\n            </div>\n        </div>\n    );\n};\n\nexport default BusketItem;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/rele/rele-item/rele-item.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/modems/modem-item/modem-item.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/termistors/termistors-item/termistor-item.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/way-block/way-block.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/droseli/droseli-item/droseli-item.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/condensators/condensators-item/condensators-item.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/datchyki/datchyky-item/datchyky-item.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/transistors/transistors-item/transistors-item.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/homepage/main-content/slider/slider.js",["252"],"import React, {useState} from 'react';\n\nimport '../../../../assets/style/scss/homepage/main-content/slider/style.css'\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Carousel from 'react-bootstrap/Carousel'\n\nconst Sliderr = (props) => {\n    // var settings = {\n    //     autoplay: true,\n    //     autoplaySpeed: 2000,\n    //     dots: true,\n    //     infinite: true,\n    //     speed: 500,\n    //     slidesToShow: 1,\n    //     slidesToScroll: 1\n    // };\n    //\n    // let SliderItem = props.data.map(i =>\n    //     <div>\n    //         <div className=\"sl_slide\"><img\n    //             src={i}\n    //             alt=\"\"/>\n    //         </div>\n    //     </div>\n    // )\n    //\n    // return (\n    //     <div className={'main'}>\n    //         <Slider {...settings}>\n    //             {SliderItem}\n    //         </Slider>\n    //\n    //     </div>\n    // );\n\n    const [index, setIndex] = useState(0);\n\n    const handleSelect = (selectedIndex, e) => {\n        setIndex(selectedIndex);\n    };\n    let SliderItem = props.data.map(i =>\n            <Carousel.Item className={'item'}>\n                <img\n                    className=\"d-block w-100 img_slide\"\n                    src={i}\n                    alt=\"First slide\"\n\n                />\n                {/*<Carousel.Caption>*/}\n                {/*    <h3>First slide label</h3>*/}\n                {/*    <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>*/}\n                {/*</Carousel.Caption>*/}\n            </Carousel.Item>\n\n    )\n    return (\n        <Carousel activeIndex={index} onSelect={handleSelect}>\n            {SliderItem}\n        </Carousel>\n    );\n};\n\nexport default Sliderr;","/Users/apple/Documents/Work/ss/diploma-proj/src/components/diods/diod-item/diod-item.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/stabilitron/stabilitron-item/stabilitron-item.js",[],"/Users/apple/Documents/Work/ss/diploma-proj/src/components/app/resistors_data.js",["253"],{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":5,"column":8,"nodeType":"260","messageId":"261","endLine":5,"endColumn":13},{"ruleId":"258","severity":1,"message":"262","line":56,"column":11,"nodeType":"260","messageId":"261","endLine":56,"endColumn":19},{"ruleId":"258","severity":1,"message":"263","line":1,"column":16,"nodeType":"260","messageId":"261","endLine":1,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":17,"column":7,"nodeType":"266","endLine":17,"endColumn":14,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":31,"column":29,"nodeType":"270","endLine":31,"endColumn":56},{"ruleId":"258","severity":1,"message":"263","line":1,"column":16,"nodeType":"260","messageId":"261","endLine":1,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":16,"column":7,"nodeType":"266","endLine":16,"endColumn":14,"suggestions":"271"},{"ruleId":"268","severity":1,"message":"269","line":30,"column":29,"nodeType":"270","endLine":30,"endColumn":56},{"ruleId":"264","severity":1,"message":"265","line":16,"column":7,"nodeType":"266","endLine":16,"endColumn":14,"suggestions":"272"},{"ruleId":"268","severity":1,"message":"269","line":30,"column":29,"nodeType":"270","endLine":30,"endColumn":56},{"ruleId":"264","severity":1,"message":"265","line":16,"column":7,"nodeType":"266","endLine":16,"endColumn":14,"suggestions":"273"},{"ruleId":"268","severity":1,"message":"269","line":30,"column":29,"nodeType":"270","endLine":30,"endColumn":56},{"ruleId":"258","severity":1,"message":"274","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":21},{"ruleId":"258","severity":1,"message":"275","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":16,"column":7,"nodeType":"266","endLine":16,"endColumn":14,"suggestions":"276"},{"ruleId":"268","severity":1,"message":"269","line":30,"column":29,"nodeType":"270","endLine":30,"endColumn":56},{"ruleId":"264","severity":1,"message":"265","line":16,"column":7,"nodeType":"266","endLine":16,"endColumn":14,"suggestions":"277"},{"ruleId":"268","severity":1,"message":"269","line":30,"column":29,"nodeType":"270","endLine":30,"endColumn":56},{"ruleId":"264","severity":1,"message":"265","line":16,"column":7,"nodeType":"266","endLine":16,"endColumn":14,"suggestions":"278"},{"ruleId":"268","severity":1,"message":"269","line":30,"column":29,"nodeType":"270","endLine":30,"endColumn":56},{"ruleId":"258","severity":1,"message":"279","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":23},{"ruleId":"264","severity":1,"message":"265","line":16,"column":7,"nodeType":"266","endLine":16,"endColumn":14,"suggestions":"280"},{"ruleId":"268","severity":1,"message":"269","line":30,"column":29,"nodeType":"270","endLine":30,"endColumn":56},{"ruleId":"258","severity":1,"message":"281","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":24},{"ruleId":"258","severity":1,"message":"282","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":21},{"ruleId":"258","severity":1,"message":"275","line":2,"column":8,"nodeType":"260","messageId":"261","endLine":2,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":16,"column":7,"nodeType":"266","endLine":16,"endColumn":14,"suggestions":"283"},{"ruleId":"268","severity":1,"message":"269","line":30,"column":29,"nodeType":"270","endLine":30,"endColumn":56},{"ruleId":"264","severity":1,"message":"265","line":17,"column":7,"nodeType":"266","endLine":17,"endColumn":14,"suggestions":"284"},{"ruleId":"268","severity":1,"message":"269","line":31,"column":29,"nodeType":"270","endLine":31,"endColumn":56},{"ruleId":"258","severity":1,"message":"285","line":4,"column":9,"nodeType":"260","messageId":"261","endLine":4,"endColumn":16},{"ruleId":"258","severity":1,"message":"286","line":13,"column":8,"nodeType":"260","messageId":"261","endLine":13,"endColumn":21},{"ruleId":"258","severity":1,"message":"287","line":14,"column":8,"nodeType":"260","messageId":"261","endLine":14,"endColumn":21},{"ruleId":"258","severity":1,"message":"288","line":15,"column":8,"nodeType":"260","messageId":"261","endLine":15,"endColumn":25},{"ruleId":"258","severity":1,"message":"289","line":16,"column":8,"nodeType":"260","messageId":"261","endLine":16,"endColumn":19},{"ruleId":"258","severity":1,"message":"290","line":4,"column":9,"nodeType":"260","messageId":"261","endLine":4,"endColumn":22},{"ruleId":"258","severity":1,"message":"291","line":4,"column":33,"nodeType":"260","messageId":"261","endLine":4,"endColumn":38},{"ruleId":"258","severity":1,"message":"292","line":9,"column":8,"nodeType":"260","messageId":"261","endLine":9,"endColumn":12},{"ruleId":"258","severity":1,"message":"293","line":19,"column":9,"nodeType":"260","messageId":"261","endLine":19,"endColumn":16},{"ruleId":"258","severity":1,"message":"294","line":23,"column":12,"nodeType":"260","messageId":"261","endLine":23,"endColumn":17},{"ruleId":"258","severity":1,"message":"295","line":23,"column":19,"nodeType":"260","messageId":"261","endLine":23,"endColumn":27},{"ruleId":"268","severity":1,"message":"269","line":11,"column":21,"nodeType":"270","endLine":11,"endColumn":48},{"ruleId":"258","severity":1,"message":"296","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":14},{"ruleId":"297","severity":1,"message":"298","line":1,"column":1,"nodeType":"299","endLine":203,"endColumn":2},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"no-unused-vars","'style' is defined but never used.","Identifier","unusedVar","'arr_data' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.data.price'. Either include it or remove the dependency array. If 'setAllPrice' needs the current value of 'props.data.price', you can also switch to useReducer instead of useState and read 'props.data.price' in the reducer.","ArrayExpression",["302"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["303"],["304"],["305"],"'TermistorItem' is defined but never used.","'ModemItem' is defined but never used.",["306"],["307"],["308"],"'StabilitronItem' is defined but never used.",["309"],"'CondensatorsItem' is defined but never used.","'ResistorsItem' is defined but never used.",["310"],["311"],"'NavLink' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'data' is defined but never used.","'arrData' is assigned a value but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'Slider' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"312","fix":"313"},{"desc":"312","fix":"314"},{"desc":"312","fix":"315"},{"desc":"312","fix":"316"},{"desc":"312","fix":"317"},{"desc":"312","fix":"318"},{"desc":"312","fix":"319"},{"desc":"312","fix":"320"},{"desc":"312","fix":"321"},{"desc":"312","fix":"322"},"Update the dependencies array to be: [count, props.data.price]",{"range":"323","text":"324"},{"range":"325","text":"324"},{"range":"326","text":"324"},{"range":"327","text":"324"},{"range":"328","text":"324"},{"range":"329","text":"324"},{"range":"330","text":"324"},{"range":"331","text":"324"},{"range":"332","text":"324"},{"range":"333","text":"324"},[731,738],"[count, props.data.price]",[730,737],[723,730],[724,731],[728,735],[730,737],[723,730],[731,738],[726,733],[728,735]]